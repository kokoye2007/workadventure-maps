import { AbstractWorkadventureStateCommands } from "./AbstractState";
import { PrivatePlayerState } from "./PrivatePlayerState";
import { PublicPlayerState } from "./PublicPlayerState";
type PlayerState = PublicPlayerState & PrivatePlayerState;
export declare class WorkadventurePlayerStateCommands extends AbstractWorkadventureStateCommands<PlayerState> {
    constructor();
    callbacks: {
        type: "setPlayerVariable";
        callback: (event: {
            key: string;
            value?: unknown;
        }) => void;
    }[];
    saveVariable<K extends keyof PlayerState & string>(key: K, value: PlayerState[K], options?: {
        public?: boolean;
        persist?: boolean;
        ttl?: number;
        scope?: "world" | "room";
    }): Promise<void>;
}
export declare const playerState: WorkadventurePlayerStateCommands & PlayerState;
export {};
