import { z } from "zod";
export declare const isSendEventEvent: z.ZodObject<{
    name: z.ZodString;
    data: z.ZodUnknown;
    targetUserIds: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
}, "strip", z.ZodTypeAny, {
    name: string;
    data?: unknown;
    targetUserIds?: number[] | undefined;
}, {
    name: string;
    data?: unknown;
    targetUserIds?: number[] | undefined;
}>;
export declare const isSendEventIframeEvent: z.ZodObject<{
    type: z.ZodLiteral<"dispatchEvent">;
    data: z.ZodObject<{
        name: z.ZodString;
        data: z.ZodUnknown;
        targetUserIds: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
    }, "strip", z.ZodTypeAny, {
        name: string;
        data?: unknown;
        targetUserIds?: number[] | undefined;
    }, {
        name: string;
        data?: unknown;
        targetUserIds?: number[] | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    type: "dispatchEvent";
    data: {
        name: string;
        data?: unknown;
        targetUserIds?: number[] | undefined;
    };
}, {
    type: "dispatchEvent";
    data: {
        name: string;
        data?: unknown;
        targetUserIds?: number[] | undefined;
    };
}>;
/**
 * A message sent to dispatch an event to/from the iFrame
 */
export type SendEventEvent = z.infer<typeof isSendEventEvent>;
