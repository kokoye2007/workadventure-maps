import { z } from "zod";
export declare const isAddActionBarButtonEvent: z.ZodObject<{
    id: z.ZodString;
    label: z.ZodOptional<z.ZodString>;
    toolTip: z.ZodOptional<z.ZodString>;
    bgColor: z.ZodOptional<z.ZodString>;
    textColor: z.ZodOptional<z.ZodString>;
    imageSrc: z.ZodOptional<z.ZodString>;
    isGradient: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    isGradient: boolean;
    label?: string | undefined;
    toolTip?: string | undefined;
    bgColor?: string | undefined;
    textColor?: string | undefined;
    imageSrc?: string | undefined;
}, {
    id: string;
    label?: string | undefined;
    toolTip?: string | undefined;
    bgColor?: string | undefined;
    textColor?: string | undefined;
    imageSrc?: string | undefined;
    isGradient?: boolean | undefined;
}>;
export type AddButtonActionBarEvent = z.infer<typeof isAddActionBarButtonEvent>;
export type AddActionButtonActionBarEvent = AddButtonActionBarEvent;
export type AddClassicButtonActionBarEvent = AddButtonActionBarEvent;
export type AddActionsButtonActionBarEventCallback = (event: AddButtonActionBarEvent) => void;
export declare const isRemoveButtonActionBarEvent: z.ZodObject<{
    id: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
}, {
    id: string;
}>;
export type RemoveButtonActionBarEvent = z.infer<typeof isRemoveButtonActionBarEvent>;
